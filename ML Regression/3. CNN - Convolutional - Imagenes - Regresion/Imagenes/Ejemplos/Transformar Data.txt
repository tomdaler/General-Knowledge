Transformacion de datos

Los valores iniciales son de 0 – 255, se cambia porque se maneja mejor con decimales que con valores mayores a 1.  Antes valores enteros y los pasa a float

train_images = train_images.astype('float32') / 255
test_images = test_images.astype('float32') / 255


Nuevos Valores, a decimales

train_images[99][27][27]

[0.        , 0.        , 0.        , 0.        , 0.        ,
        0.        , 0.        , 0.        , 0.        , 0.01176471,
        0.        , 0.        , 0.22352941, 0.30588236, 0.34117648,
        0.18431373, 0.09803922, 0.01568628, 0.        , 0.        ,…….

Canal es 1 porque son todos de grises, si fuera a colores será 3 en vez de 1
train_images = train_images.reshape(train_images.shape[0], 28, 28, 1)
test_images  = test_images.reshape(test_images.shape[0], 28, 28, 1)


Etiquetas
train_labels.shape
60000,

train_labels
60,000 valores del 0 al 9.

array([9, 0, 0, ..., 3, 0, 5], dtype=uint8)



Transformación

En vez de 7  sera  0,0,0,0,0,0,0,1,0,0
En vez de 2  sera  0,0,1,0,0,0,1,0,0,0
En vez de un arreglo de 60,000  sera uno de 60,000 x 10

train_labels = tf.keras.utils.to_categorical(train_labels, 10)
test_labels = tf.keras.utils.to_categorical(test_labels, 10)


train_labels 
array([0., 0., 0., 0., 0., 0., 0., 0., 1., 0.], dtype=float32)


